{
  "swagger": "2.0",
  "info": {
    "title": "protos/api/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "API"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/project/create": {
      "post": {
        "summary": "CreateProject creates project",
        "operationId": "API_CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gonex_projectProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gonex_projectCreateProjectRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/project/get/{projectId}": {
      "get": {
        "summary": "GetProject retrives a project",
        "operationId": "API_GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gonex_projectProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/project/{projectId}/task/list": {
      "get": {
        "summary": "ListTasks lists task",
        "operationId": "API_ListTasks2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gonex_taskListTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tagId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assignedUserId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/project/{projectId}/task/list/{assignedUserId}": {
      "get": {
        "summary": "ListTasks lists task",
        "operationId": "API_ListTasks3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gonex_taskListTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignedUserId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tagId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/project/{projectId}/task/list/{assignedUserId}/{tagId}": {
      "get": {
        "summary": "ListTasks lists task",
        "operationId": "API_ListTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gonex_taskListTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignedUserId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/task/create": {
      "post": {
        "summary": "CreateTask creates task",
        "operationId": "API_CreateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gonex_taskTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gonex_taskCreateTaskRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/task/update": {
      "post": {
        "summary": "UpdateTask updates task",
        "operationId": "API_UpdateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gonex_taskTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gonex_taskUpdateTaskRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/user/login": {
      "post": {
        "summary": "LoginUser logs in user",
        "operationId": "API_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gonex_userUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gonex_userLoginRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/user/register": {
      "post": {
        "summary": "RegisterUser creates user",
        "operationId": "API_RegisterUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gonex_userUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gonex_userRegisterRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    }
  },
  "definitions": {
    "gonex_projectCreateProjectRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "gonex_projectProjectResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gonex_projectTagResponse"
          }
        }
      }
    },
    "gonex_projectTagResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        }
      }
    },
    "gonex_taskCreateTaskRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        },
        "assignedUserId": {
          "type": "string"
        }
      }
    },
    "gonex_taskListTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gonex_taskTaskResponse"
          }
        }
      }
    },
    "gonex_taskTaskResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        },
        "assignedUserId": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/gonex_projectProjectResponse"
        },
        "tag": {
          "$ref": "#/definitions/gonex_projectTagResponse"
        },
        "assignedUser": {
          "$ref": "#/definitions/gonex_userVerifyResponse"
        }
      }
    },
    "gonex_taskUpdateTaskRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        },
        "assignedUserId": {
          "type": "string"
        }
      }
    },
    "gonex_userLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "gonex_userRegisterRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "gonex_userUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "gonex_userVerifyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
